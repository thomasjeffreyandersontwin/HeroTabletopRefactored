<UserControl x:Class="HeroVirtualTabletop.ManagedCharacter.IdentityEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HeroUI"
             xmlns:managedcharacter="clr-namespace:HeroVirtualTabletop.ManagedCharacter;assembly=HeroUI"
             xmlns:characters="clr-namespace:HeroVirtualTabletop.ManagedCharacter;assembly=HeroVirtualTabletop"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:behaviors="clr-namespace:Framework.WPF.Behaviors;assembly=Framework.WPF"
             xmlns:extensions="clr-namespace:Framework.WPF.Extensions;assembly=Framework.WPF"
             xmlns:bindings="clr-namespace:Framework.WPF.Binding;assembly=Framework.WPF"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:cal="http://www.caliburnproject.org"
             mc:Ignorable="d"
             Loaded="IdentityEditorView_Loaded">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/HeroResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ObjectDataProvider x:Key="IdentityTypes" MethodName="GetValues"
                            ObjectType="{x:Type system:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="characters:SurfaceType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <local:StringComparerToVisibilityConverter x:Key="identityTypeConverter"></local:StringComparerToVisibilityConverter>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Button Grid.Row="0" HorizontalAlignment="Right"  Content="&#xf00d;" ToolTip="Close" x:Name="CloseEditor" Margin="0,0,2,0" Style="{StaticResource CloseButtonStyle}"/>

            <Grid Grid.Row="1" VerticalAlignment="Center" Margin="5">
                <TextBox x:Name="textBlockName" Text="{Binding Path=EditedIdentity.Name}" Style="{StaticResource SelectableTextBlockLikeStyle}">
                    <i:Interaction.Triggers>
                        <local:InputBindingTrigger>
                            <local:InputBindingTrigger.InputBinding>
                                <MouseBinding MouseAction="LeftDoubleClick"/>
                            </local:InputBindingTrigger.InputBinding>
                            <cal:ActionMessage MethodName="EnterEditMode">
                                <cal:Parameter Value="{Binding ElementName=textBlockName}" />
                            </cal:ActionMessage>
                        </local:InputBindingTrigger>
                        <local:InputBindingTrigger>
                            <local:InputBindingTrigger.InputBinding>
                                <KeyBinding Key="Space"/>
                            </local:InputBindingTrigger.InputBinding>
                            <cal:ActionMessage MethodName="EnterEditMode">
                                <cal:Parameter Value="{Binding ElementName=textBlockName}" />
                            </cal:ActionMessage>
                        </local:InputBindingTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <TextBox Name="textBoxName" Visibility="Hidden" Text="{Binding Path=EditedIdentity.Name, UpdateSourceTrigger=Explicit}" cal:Message.Attach="[Event LostFocus] = [Action SubmitIdentityRename($source)]">
                    <i:Interaction.Triggers>
                        <local:InputBindingTrigger>
                            <local:InputBindingTrigger.InputBinding>
                                <KeyBinding Key="Return"/>
                            </local:InputBindingTrigger.InputBinding>
                            <cal:ActionMessage MethodName="SubmitIdentityRename">
                                <cal:Parameter Value="{Binding ElementName=textBoxName}" />
                            </cal:ActionMessage>
                        </local:InputBindingTrigger>
                        <local:InputBindingTrigger>
                            <local:InputBindingTrigger.InputBinding>
                                <KeyBinding Key="Esc"/>
                            </local:InputBindingTrigger.InputBinding>
                            <cal:ActionMessage MethodName="CancelEditMode">
                                <cal:Parameter Value="{Binding ElementName=textBoxName}" />
                            </cal:ActionMessage>
                        </local:InputBindingTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
            </Grid>

            <CheckBox Grid.Row="2" Name="IsDefault" IsChecked="{Binding Path=IsDefault}" Content="Default Identity" Foreground="White" Margin="5"/>

            <Grid Grid.Row="3" Margin="5" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" VerticalAlignment="Center" Foreground="White">Current Surface:</Label>
                <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding EditedIdentity.Surface, Mode=OneWay}"></TextBlock>
            </Grid>

            <ComboBox Grid.Row="4"
                        Name="cbBoxType"
	                    HorizontalAlignment="Stretch"
                        Margin="5"
                        ItemsSource="{Binding Source={StaticResource IdentityTypes}}"
                        SelectedItem="{Binding Path=EditedIdentity.Type, Mode=TwoWay}">
            </ComboBox>

            <TextBox Grid.Row="5" Name="FilterTextBox" Text="{Binding Filter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5"/>
        </Grid>
        <Grid x:Name="listGrid" Margin="5" Grid.Row="1">
            <Grid.Resources>
                <Style TargetType="{x:Type ListBox}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="TextElement.Foreground" Value="White"/>
                </Style>
            </Grid.Resources>
            <ListBox x:Name="listBoxModels" Grid.Row="0"
                         Width="300"
                         SelectionMode="Single" ScrollViewer.VerticalScrollBarVisibility="Auto"
                         ItemsSource="{Binding ModelsCVS.View}"
                         Visibility="{Binding Path=EditedIdentity.Type, Converter={StaticResource identityTypeConverter}, ConverterParameter=Model}"
                         SelectedValue="{Binding Path=EditedIdentity.Surface, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                         IsSynchronizedWithCurrentItem="True" IsVisibleChanged="listBoxModels_IsVisibleChanged">
                <i:Interaction.Behaviors>
                    <behaviors:ScrollIntoViewForListBox />
                </i:Interaction.Behaviors>
                <ListBox.Resources>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="TextElement.Foreground" Value="White"/>
                    </Style>
                </ListBox.Resources>
            </ListBox>
            <ListBox x:Name="listBoxCostumes" Grid.Row="0"
                         Width="300"
                         SelectionMode="Single" ScrollViewer.VerticalScrollBarVisibility="Auto"
                         ItemsSource="{Binding CostumesCVS.View}"
                         Visibility="{Binding Path=EditedIdentity.Type, Converter={StaticResource identityTypeConverter}, ConverterParameter=Costume}"
                         SelectedValue="{Binding Path=EditedIdentity.Surface, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                         IsSynchronizedWithCurrentItem="True" IsVisibleChanged="listBoxCostumes_IsVisibleChanged">
                <i:Interaction.Behaviors>
                    <behaviors:ScrollIntoViewForListBox />
                </i:Interaction.Behaviors>
                <ListBox.Resources>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="TextElement.Foreground" Value="White"/>
                    </Style>
                </ListBox.Resources>
            </ListBox>
        </Grid>
        <Grid Grid.Row="2" Margin="5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Label Foreground="White">Animation On Load:</Label>
                <ListBox x:Name="listBoxAnimations" Grid.Row="1"
                Width="300" ScrollViewer.VerticalScrollBarVisibility="Visible"
                SelectionMode="Single" IsEnabled="{Binding CanEditIdentityOptions}"
                ItemsSource="{Binding AbilitiesCVS.View}"
                SelectedItem="{Binding Path=EditedIdentity.AnimationOnLoad, Mode=TwoWay}"
                DisplayMemberPath="Name" IsVisibleChanged="listBoxAnimations_IsVisibleChanged">
                    <ListBox.Style>
                        <Style TargetType="{x:Type ListBox}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="TextElement.Foreground" Value="White"/>
                        </Style>
                    </ListBox.Style>
                    <i:Interaction.Behaviors>
                        <behaviors:ScrollIntoViewForListBox />
                    </i:Interaction.Behaviors>
                    <ListBox.Resources>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="TextElement.Foreground" Value="White"/>
                        </Style>
                    </ListBox.Resources>
                </ListBox>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
